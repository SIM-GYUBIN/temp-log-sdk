"use strict";var Cholog=(()=>{var v=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var S=(n,e)=>{for(var o in e)v(n,o,{get:e[o],enumerable:!0})},I=(n,e,o,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of b(e))!C.call(n,r)&&r!==o&&v(n,r,{get:()=>e[r],enumerable:!(t=w(e,r))||t.enumerable});return n};var R=n=>I(v({},"__esModule",{value:!0}),n);var q={};S(q,{Cholog:()=>y,default:()=>T});var d=class{static{this.currentTraceId=null}static{this.currentSpanId=null}static startNewTrace(){return this.currentTraceId=this.generateId("trace"),this.currentSpanId=null,this.currentTraceId}static getCurrentTraceId(){return this.currentTraceId}static setCurrentTraceId(e){this.currentTraceId=e}static generateId(e){return crypto&&crypto.randomUUID?crypto.randomUUID():`<span class="math-inline">{prefix}-</span>{Date.now()}-${Math.random().toString(36).substring(2,9)}`}};var a=class{static{this.projectKey=""}static{this.environment=""}static{this.apiEndpoint="http://localhost:8080/logs"}static{this.originalConsole=null}static{this.logQueue=[]}static{this.batchInterval=1e3}static{this.batchTimeoutId=null}static{this.maxQueueSize=100*1024}static{this.currentQueueSize=0}static init(e){if(this.originalConsole!==null){console.warn("Cholog: Logger already initialized.");return}this.projectKey=e.projectKey,this.environment=e.environment,e.batchInterval&&(this.batchInterval=e.batchInterval),e.maxQueueSize&&(this.maxQueueSize=e.maxQueueSize),this.overrideConsoleMethods()}static getApiEndpoint(){return this.apiEndpoint}static overrideConsoleMethods(){this.originalConsole={log:console.log.bind(console),info:console.info.bind(console),warn:console.warn.bind(console),error:console.error.bind(console),debug:console.debug.bind(console),trace:console.trace.bind(console)},console.log=(...e)=>this.queueAndPrint("info","console",...e),console.info=(...e)=>this.queueAndPrint("info","console",...e),console.warn=(...e)=>this.queueAndPrint("warn","console",...e),console.error=(...e)=>this.queueAndPrint("error","console",...e),console.debug=(...e)=>this.queueAndPrint("debug","console",...e),console.trace=(...e)=>this.queueAndPrint("trace","console",...e)}static queueAndPrint(e,o,...t){if(this.originalConsole){let r=this.originalConsole[e];r?r(...t):this.originalConsole.log(...t)}this.prepareAndQueueLog(e,o,t)}static prepareAndQueueLog(e,o,t,r,c,l,s){if(!this.projectKey||!this.environment){this.originalConsole?this.originalConsole.warn("Cholog: SDK not initialized. Log not sent.",...t):console.warn("Cholog: SDK not initialized. Log not sent.",...t);return}let g="",i={},u={};t.length>0&&(typeof t[0]=="string"?(g=t[0],t.length>1&&typeof t[1]=="object"&&t[1]!==null?!r&&!c&&!s&&(i={...t[1]}):t.length>1&&(g+=" "+t.slice(1).map(p=>typeof p=="object"?JSON.stringify(p):String(p)).join(" "))):g=t.map(p=>typeof p=="object"?JSON.stringify(p):String(p)).join(" ")),r&&(u.error=r),c&&(u.http=c),l&&(u.client=l),s&&(u.event=s);let h={timestamp:new Date().toISOString(),level:e.toUpperCase(),message:g,source:"frontend",projectKey:this.projectKey,environment:this.environment,traceId:d.getCurrentTraceId(),loggerName:o,...u};Object.keys(i).length>0&&(h.payload=i),typeof window<"u"&&typeof navigator<"u"&&typeof location<"u"&&(h.client||(h.client={}),h.client.url=window.location.href,h.client.userAgent=navigator.userAgent,document.referrer&&(h.client.referrer=document.referrer));let E=new Blob([JSON.stringify(h)]).size;this.logQueue.push(h),this.currentQueueSize+=E,this.currentQueueSize>this.maxQueueSize?this.sendBatch():this.scheduleBatch()}static scheduleBatch(){this.batchTimeoutId===null&&(this.batchTimeoutId=window.setTimeout(async()=>{await this.sendBatch(),this.batchTimeoutId=null,this.logQueue.length>0&&this.scheduleBatch()},this.batchInterval))}static async sendBatch(){if(this.logQueue.length===0)return;let e=[...this.logQueue];this.logQueue=[],this.currentQueueSize=0;try{let o=await fetch(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json","App-Key":this.projectKey},body:JSON.stringify(e)});if(!o.ok)throw new Error(`Log send failed: ${o.status}`)}catch(o){this.originalConsole?this.originalConsole.error("Logger sendBatch error:",o):console.error("Logger sendBatch error (original console unavailable):",o)}}static log(e,o){this.prepareAndQueueLog("info","cholog",[e,o||{}])}static info(e,o){this.prepareAndQueueLog("info","cholog",[e,o||{}])}static warn(e,o){this.prepareAndQueueLog("warn","cholog",[e,o||{}])}static error(e,o){this.prepareAndQueueLog("error","cholog",[e,o||{}])}static debug(e,o){this.prepareAndQueueLog("debug","cholog",[e,o||{}])}static trace(e,o){this.prepareAndQueueLog("trace","cholog",[e,o||{}])}static logError(e,o,t){this.prepareAndQueueLog("error","cholog-error",[e],o,void 0,t)}static logHttp(e,o,t,r){let c=r||o.response&&o.response.statusCode>=400?"error":"info";this.prepareAndQueueLog(c,"cholog-network",[e],r,o,t)}static logEvent(e,o,t){this.prepareAndQueueLog("info","cholog-event",[e],void 0,void 0,t,o)}};var f=class n{static{this.isInitialized=!1}static{this.originalFetch=null}static{this.originalXhrSend=null}static patchFetch(){this.originalFetch=window.fetch;let e=this;window.fetch=async(o,t)=>{let r=typeof o=="string"?o:o.toString();if(r.startsWith(a.getApiEndpoint()))return n.originalFetch.call(window,o,t);let c=d.getCurrentTraceId();c||(c=d.startNewTrace());let l={...t||{}};l.headers=new Headers(l.headers),l.headers.set("X-Request-ID",c);let s=Date.now(),g={method:(l.method||"GET").toUpperCase(),url:r};a.logHttp(`API Request START: ${g.method} ${g.url}`,{request:g});try{let i=await e.originalFetch.call(window,o,l),u=Date.now()-s,h={statusCode:i.status};return a.logHttp(`API Request END: ${i.status} ${i.url}`,{request:g,response:h,durationMs:u}),i}catch(i){let u=Date.now()-s,h={type:i?.name||"FetchError",message:i?.message||"Network request failed",stacktrace:i?.stack};throw a.logHttp(`API Request FAILED: ${g.method} ${g.url}`,{request:g,durationMs:u},void 0,h),i}}}static patchXMLHttpRequest(){this.originalXhrSend=XMLHttpRequest.prototype.send;let e=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(o,t){this._chologMethod=o,this._chologUrl=typeof t=="string"?t:t.toString(),e.apply(this,arguments)},XMLHttpRequest.prototype.send=function(o){let t=this,r=t._chologUrl;if(r&&r.startsWith(a.getApiEndpoint()))return n.originalXhrSend.apply(this,arguments);let c=d.getCurrentTraceId();c||(c=d.startNewTrace()),t._chologTraceId=c,this.setRequestHeader("X-Request-ID",c);let l={method:(t._chologMethod||"UnknownMethod").toUpperCase(),url:t._chologUrl||"UnknownURL"},s=()=>{if(!t._chologLogged){t._chologLogged=!0;let g=t._chologStartTime?Date.now()-t._chologStartTime:void 0,i={statusCode:t.status},u;(t.status===0||t.status>=400)&&(u={type:t.statusText||"XHRError",message:`XHR request failed with status ${t.status}`}),a.logHttp(`API Request ${u?"FAILED":"END"}: ${t.status} ${t.responseURL||l.url}`,{request:l,response:i,durationMs:g},void 0,u)}t.removeEventListener("load",s),t.removeEventListener("error",s),t.removeEventListener("abort",s),t.removeEventListener("timeout",s)};return t.addEventListener("loadstart",()=>{t._chologStartTime=Date.now(),a.logHttp(`API Request START: ${l.method} ${l.url}`,{request:l})}),t.addEventListener("load",s),t.addEventListener("error",s),t.addEventListener("abort",s),t.addEventListener("timeout",s),n.originalXhrSend.apply(this,arguments)}}static init(){if(!(this.isInitialized||typeof window>"u"))try{this.patchFetch(),this.patchXMLHttpRequest(),this.isInitialized=!0}catch(e){console.error("Cholog SDK: Failed to initialize NetworkInterceptor.",e)}}};var m=class{static{this.isInitialized=!1}static{this.handleGlobalError=(e,o,t,r,c)=>{let l="Unhandled global error",s={type:"UnknownError",message:""},g={},i=c;if(e instanceof ErrorEvent&&e.error?(i=e.error,l=e.message||i?.message||"Error message not available",s.type=i?.name||"ErrorEvent",s.message=i?.message||l,i?.stack&&(s.stacktrace=i.stack)):typeof e=="string"?(l=e,s.message=e,i&&(s.type=i.name,s.message=i.message,i.stack&&(s.stacktrace=i.stack))):i&&(l=i.message,s.type=i.name,s.message=i.message,i.stack&&(s.stacktrace=i.stack)),s.stacktrace?.includes("cholog")||l?.includes("Cholog SDK")){a.originalConsole?.warn?.("Cholog SDK: Suppressed potential recursive error log.",l);return}a.logError(l,s)}}static{this.handleUnhandledRejection=e=>{let o=e.reason,t="Unhandled promise rejection",r={type:"UnhandledRejection",message:""};if(o instanceof Error)t=o.message||"Promise rejected with an Error",r.type=o.name||"UnhandledRejectionError",r.message=o.message,o.stack&&(r.stacktrace=o.stack);else{try{r.message=`Reason: ${JSON.stringify(o)}`}catch{r.message="Reason: [Non-serializable]"}t=`Unhandled promise rejection: ${r.message}`}if(r.stacktrace?.includes("cholog")||t?.includes("Cholog SDK")){a.originalConsole?.warn?.("Cholog SDK: Suppressed potential recursive error log.",t);return}a.logError(t,r)}}static init(){if(!(this.isInitialized||typeof window>"u"))try{window.onerror=this.handleGlobalError,window.addEventListener("unhandledrejection",this.handleUnhandledRejection),this.isInitialized=!0}catch(e){console.error("Cholog SDK: Failed to initialize ErrorCatcher.",e)}}};var L=class{static{this.config={significantElementSelector:'button, a, [role="button"], input[type="submit"], [data-cholog-action]'}}static init(e){e?.significantElementSelector&&(this.config.significantElementSelector=e.significantElementSelector),this.logNavigation(window.location.href,"initial_load"),window.addEventListener("hashchange",()=>this.logNavigation(window.location.href,"hash_change")),document.addEventListener("click",o=>{let t=o.target;if(t.closest(this.config.significantElementSelector)){let r=d.startNewTrace(),c={type:"user_action_start",targetSelector:this.getElementPath(t)};a.logEvent(`User action started: Click on ${c.targetSelector}`,c)}},!0)}static logNavigation(e,o){d.startNewTrace();let t={type:o};a.logEvent(`Navigation to ${e}`,t)}static getElementPath(e){let o=[],t=e;for(;t&&t.tagName;){let r=t.tagName.toLowerCase();if(t.id){r+=`#${t.id}`,o.unshift(r);break}else t.classList&&t.classList.length>0&&(r+=`.${Array.from(t.classList).join(".")}`);if(o.unshift(r),t=t.parentElement,o.length>5)break}return o.join(" > ")}};var y={init:n=>{d.startNewTrace(),a.init({projectKey:n.projectKey,environment:n.environment}),f.init(),m.init(),L.init(),a.info("Cholog SDK Initialized",{sdk:"cholog-js",version:"0.1.0-dev"})},log:(n,e)=>a.log(n,e),info:(n,e)=>a.info(n,e),warn:(n,e)=>a.warn(n,e),error:(n,e)=>{a.error(n,e)},debug:(n,e)=>a.debug(n,e),trace:(n,e)=>a.trace(n,e)},T=y;return R(q);})();
