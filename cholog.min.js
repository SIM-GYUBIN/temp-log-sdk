"use strict";var Cholog=(()=>{var v=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var L=(l,e)=>{for(var r in e)v(l,r,{get:e[r],enumerable:!0})},S=(l,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of I(e))!C.call(l,i)&&i!==r&&v(l,i,{get:()=>e[i],enumerable:!(t=T(e,i))||t.enumerable});return l};var E=l=>S(v({},"__esModule",{value:!0}),l);var k={};L(k,{Cholog:()=>y,default:()=>R});var a=class{static{this.currentTraceId=null}static{this.currentSpanId=null}static startNewTrace(){return this.currentTraceId=this.generateId("trace"),this.currentSpanId=null,this.currentTraceId}static getCurrentTraceId(){return this.currentTraceId}static setCurrentTraceId(e){this.currentTraceId=e}static generateId(e){return crypto&&crypto.randomUUID?crypto.randomUUID():`<span class="math-inline">{prefix}-</span>{Date.now()}-${Math.random().toString(36).substring(2,9)}`}};var n=class{static{this.appKey=""}static{this.apiEndpoint="http://localhost:8080/logs"}static{this.originalConsole=null}static{this.logQueue=[]}static{this.batchInterval=1e3}static{this.batchTimeoutId=null}static{this.maxQueueSize=100*1024}static{this.currentQueueSize=0}static init(e){if(this.originalConsole!==null){console.warn("Logger already initialized.");return}this.appKey=e.appKey,e.batchInterval&&(this.batchInterval=e.batchInterval),e.maxQueueSize&&(this.maxQueueSize=e.maxQueueSize),this.overrideConsoleMethods()}static overrideConsoleMethods(){this.originalConsole={log:console.log.bind(console),info:console.info.bind(console),warn:console.warn.bind(console),error:console.error.bind(console),debug:console.debug.bind(console),trace:console.trace.bind(console)},console.log=(...e)=>this.queueAndPrint("info",e),console.info=(...e)=>this.queueAndPrint("info",e),console.warn=(...e)=>this.queueAndPrint("warn",e),console.error=(...e)=>this.queueAndPrint("error",e),console.debug=(...e)=>this.queueAndPrint("debug",e),console.trace=(...e)=>this.queueAndPrint("trace",e)}static queueAndPrint(e,r){this.originalConsole&&this.originalConsole[e](...r),this.queueLog(e,r)}static queueLog(e,r){let t=r.map(o=>typeof o=="object"?JSON.stringify(o):String(o)).join(" "),i={level:e,message:t,timestamp:new Date().toISOString(),traceId:a.getCurrentTraceId()},u=new Blob([JSON.stringify(i)]).size;this.logQueue.push(i),this.currentQueueSize+=u,this.currentQueueSize>this.maxQueueSize?this.sendBatch():this.scheduleBatch()}static scheduleBatch(){this.batchTimeoutId===null&&(this.batchTimeoutId=window.setTimeout(async()=>{await this.sendBatch(),this.batchTimeoutId=null,this.logQueue.length>0&&this.scheduleBatch()},this.batchInterval))}static async sendBatch(){if(this.logQueue.length===0)return;let e=[...this.logQueue];this.logQueue=[],this.currentQueueSize=0;try{let r=await fetch(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json","App-Key":this.appKey},body:JSON.stringify(e)});if(!r.ok)throw new Error(`Log send failed: ${r.status}`)}catch(r){this.originalConsole?this.originalConsole.error("Logger sendBatch error:",r):console.error("Logger sendBatch error (original console unavailable):",r)}}static info(...e){if(!this.appKey){console.warn("Cholog SDK is not initialized. Call ChologSDK.init first.");return}this.queueLog("info",e)}static warn(...e){if(!this.appKey){console.warn("Cholog SDK is not initialized. Call ChologSDK.init first.");return}this.queueLog("warn",e)}static error(...e){if(!this.appKey){console.warn("Cholog SDK is not initialized. Call ChologSDK.init first.");return}this.queueLog("error",e)}static debug(...e){if(!this.appKey){console.warn("Cholog SDK is not initialized. Call ChologSDK.init first.");return}this.queueLog("debug",e)}static trace(...e){if(!this.appKey){console.warn("Cholog SDK is not initialized. Call ChologSDK.init first.");return}this.queueLog("trace",e)}};var f=class l{static{this.isInitialized=!1}static{this.originalFetch=null}static{this.originalXhrSend=null}static patchFetch(){this.originalFetch=window.fetch;let e=this;window.fetch=async(r,t)=>{let i=a.getCurrentTraceId(),u=!1;i||(i=a.startNewTrace(),u=!0);let o={...t||{}},s=o.headers,c;s instanceof Headers?c=new Headers(s):Array.isArray(s)?c=new Headers(s):typeof s=="object"&&s!==null?c=new Headers(s):c=new Headers,c.set("X-Request-ID",i),o.headers=c;let p=Date.now();n.info(`API Request START: ${typeof r=="string"?r:r.toString()}`,{traceId:i,method:o.method||"GET"});try{let d=await e.originalFetch.call(window,r,o),h=Date.now()-p;return n.info(`API Request END: ${d.status} ${d.url}`,{traceId:i,status:d.status,durationMs:h}),d}catch(d){let h=Date.now()-p;throw n.error(`API Request FAILED: ${typeof r=="string"?r:r.toString()}`,{traceId:i,error:d,durationMs:h}),d}finally{}}}static patchXMLHttpRequest(){this.originalXhrSend=XMLHttpRequest.prototype.send;let e=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(r,t,i,u,o){this._chologMethod=r,this._chologUrl=typeof t=="string"?t:t.toString(),e.apply(this,arguments)},XMLHttpRequest.prototype.send=function(r){let t=this,i=a.getCurrentTraceId(),u=!1;i||(i=a.startNewTrace(),u=!0),t._chologTraceId=i;try{this.setRequestHeader("X-Request-ID",i)}catch(c){n.error("Cholog SDK: Failed to set X-Request-ID header for XHR.",{traceId:i,error:c,url:t._chologUrl})}let o=()=>{t._chologStartTime=Date.now(),n.info(`API Request START: ${t._chologMethod||"UnknownMethod"} ${t._chologUrl||"UnknownURL"}`,{traceId:t._chologTraceId,method:t._chologMethod,type:"XHR"}),t.removeEventListener("loadstart",o)},s=()=>{let c=t._chologStartTime?Date.now()-t._chologStartTime:void 0;t.readyState===4&&(t.status>=200&&t.status<400?n.info(`API Request END: ${t.status} ${t.responseURL||t._chologUrl||"UnknownURL"}`,{traceId:t._chologTraceId,status:t.status,durationMs:c,type:"XHR"}):t.status>=400&&n.error(`API Request FAILED: ${t.status} ${t.responseURL||t._chologUrl||"UnknownURL"}`,{traceId:t._chologTraceId,status:t.status,statusText:t.statusText,durationMs:c,type:"XHR"})),t.removeEventListener("load",s),t.removeEventListener("error",s),t.removeEventListener("abort",s),t.removeEventListener("timeout",s)};if(t.addEventListener("loadstart",o),t.addEventListener("load",s),t.addEventListener("error",s),t.addEventListener("abort",s),t.addEventListener("timeout",s),!l.originalXhrSend){console.error("Original XHR send function not found!"),n.error("Original XHR send function not found!",{traceId:i});return}return l.originalXhrSend.apply(this,arguments)}}static init(){if(this.isInitialized){console.warn("NetworkInterceptor is already initialized.");return}if(typeof window>"u"||typeof XMLHttpRequest>"u"){console.warn("NetworkInterceptor: Not running in a browser environment? Skipping patch.");return}try{this.patchFetch(),this.patchXMLHttpRequest(),this.isInitialized=!0,console.log("Cholog NetworkInterceptor initialized successfully.")}catch(e){console.error("Cholog SDK: Failed to initialize NetworkInterceptor.",e)}}};var m=class{static{this.isInitialized=!1}static{this.handleGlobalError=(e,r,t,i,u)=>{let o,s=r,c=t,p=i,d,h,g=u;if(e instanceof ErrorEvent&&e.error?(g=e.error,o=e.message||g?.message||"Error message not available",s=e.filename,c=e.lineno,p=e.colno,h=g?.name,d=g?.stack):typeof e=="string"?(o=e,g&&(h=g.name,d=g.stack)):g?(o=g.message,h=g.name,d=g.stack):(o="A non-error event was captured by the error handler.",h="UnknownError"),d?.includes("cholog")||o?.includes("Cholog SDK")){console.warn("Cholog SDK: Suppressed potential recursive error log.",o);return}let b={errorType:h||"Error",stack:d,sourceFile:s,lineno:c,colno:p,userAgent:navigator.userAgent,pageUrl:window.location.href};n.error(o||"Uncaught JavaScript Error",b)}}static{this.handleUnhandledRejection=e=>{let r=e.reason,t,i,u;if(r instanceof Error)t=r.message,i=r.stack,u=r.name;else{try{t=`Unhandled promise rejection: ${JSON.stringify(r)}`}catch{t="Unhandled promise rejection: [Non-serializable reason]"}u=typeof r}if(i?.includes("cholog")||t?.includes("Cholog SDK")){console.warn("Cholog SDK: Suppressed potential recursive error log.",t);return}let o={errorType:u||"UnhandledRejection",stack:i,sourceFile:i?void 0:window.location.href,userAgent:navigator.userAgent,pageUrl:window.location.href,reason:r instanceof Error?void 0:String(r)};n.error(t||"Unhandled Promise Rejection",o)}}static init(){if(!(this.isInitialized||typeof window>"u"))try{window.onerror=this.handleGlobalError,window.addEventListener("unhandledrejection",this.handleUnhandledRejection),this.isInitialized=!0,console.log("Cholog ErrorCatcher initialized successfully.")}catch(e){console.error("Cholog SDK: Failed to initialize ErrorCatcher.",e)}}};var w=class{static{this.config={newTraceOnClick:!0,clickTargetSelector:'button, a, [role="button"]'}}static init(e){e?.newTraceOnClick!==void 0&&(this.config.newTraceOnClick=e.newTraceOnClick),e?.clickTargetSelector&&(this.config.clickTargetSelector=e.clickTargetSelector),this.startNewTraceForNavigation(window.location.href),window.addEventListener("hashchange",()=>this.startNewTraceForNavigation(window.location.href)),document.addEventListener("click",r=>{if(!this.config.newTraceOnClick){a.getCurrentTraceId()||a.startNewTrace(),this.logGeneralClick(r.target);return}let t=r.target;t.closest(this.config.clickTargetSelector)?(a.startNewTrace(),n.info("Action started: Click on interactive element",{traceId:a.getCurrentTraceId(),eventType:"user.action.start",element:this.getElementPath(t)})):(a.getCurrentTraceId()||a.startNewTrace(),this.logGeneralClick(t))},!0)}static logGeneralClick(e){n.info("User clicked (general)",{traceId:a.getCurrentTraceId(),eventType:"ui.click",element:this.getElementPath(e)})}static startNewTraceForNavigation(e){let r=a.startNewTrace();n.info(`Navigation to ${e}`,{traceId:r,eventType:"navigation",url:e})}static getElementPath(e){let r=[],t=e;for(;t&&t.tagName;){let i=t.tagName.toLowerCase();if(t.id){i+=`#${t.id}`,r.unshift(i);break}else t.classList&&t.classList.length>0&&(i+=`.${Array.from(t.classList).join(".")}`);r.unshift(i),t=t.parentElement}return r.join(" > ")}};var y={init:l=>{n.init(l),f.init(),m.init(),w.init()},log:n.info.bind(n),info:n.info.bind(n),warn:n.warn.bind(n),error:n.error.bind(n),debug:n.debug.bind(n),trace:n.trace.bind(n)},R=y;return E(k);})();
